import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from collections import defaultdict

# Assuming X_encoded is your final DataFrame with dummies
feature_names = X_encoded.columns
importances = smotetomek_pipe.named_steps['classifier'].feature_importances_

# Create a DataFrame for importances
feat_df = pd.DataFrame({
    'Feature': feature_names,
    'Importance': importances
})

# Group by original feature using prefix before the first underscore
grouped_importance = defaultdict(list)
for feature, importance in zip(feat_df['Feature'], feat_df['Importance']):
    base = feature.split('_')[0]  # Extract base name like 'utm_source'
    grouped_importance[base].append(importance)

# Compute average importance and convert to %
avg_importance_df = pd.DataFrame([
    {
        'Original Feature': k,
        'Avg Importance (%)': 100 * sum(v) / sum(importances)
    }
    for k, v in grouped_importance.items()
]).sort_values(by='Avg Importance (%)', ascending=False)

# Plot
plt.figure(figsize=(10, 6))
sns.barplot(data=avg_importance_df, x='Avg Importance (%)', y='Original Feature', palette='viridis')
plt.title("Average Feature Importances by Original Feature")
plt.tight_layout()
plt.show()




import matplotlib.pyplot as plt

# Assuming 'avg_importance_df' has 'Feature' and 'Importance' columns in %
plt.figure(figsize=(10, 6))
bars = plt.barh(avg_importance_df['Feature'], avg_importance_df['Importance'], color='skyblue')

# Add percentage labels to end of bars
for bar in bars:
    width = bar.get_width()
    plt.text(width + 0.5, bar.get_y() + bar.get_height()/2,
             f'{width:.1f}%', va='center')

plt.xlabel('Average Importance (%)')
plt.title('Feature Importance (Grouped by Original Column)')
plt.tight_layout()
plt.show()
